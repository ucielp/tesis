%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.1
%%CreationDate: Fri Jan 15 12:00:27 2016
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GAUUGUCAAAUAUUUGACACAUGUACAGUUGUUAUUUGCAGCUGCAACAUCAUCAAGAUUCACAUAAAAUAGAAAUGUGGAGAAUAAAUAUGCCAAUUUUUUUGAAAAUGAGAAUCUUGAUGAUGCUGCAUCGGCAAAUUAUGACUUUUUUAUUCAAGAAAAGUAAUAA\
) def
/coor [
[86.43992615 459.48861694]
[77.90856171 459.25149536]
[69.46605682 458.01190186]
[61.22977066 455.78741455]
[55.04442596 469.45275879]
[48.85908127 483.11810303]
[42.67373657 496.78344727]
[36.48839188 510.44879150]
[30.30304527 524.11413574]
[32.45430756 540.37158203]
[19.28749847 550.14739990]
[4.34750366 543.38513184]
[3.00330877 527.04113770]
[16.63770676 517.92877197]
[22.82305145 504.26342773]
[29.00839615 490.59811401]
[35.19374084 476.93276978]
[41.37908554 463.26742554]
[47.56443024 449.60208130]
[29.70728302 434.94961548]
[17.36932182 415.40319824]
[11.81614017 392.94958496]
[13.62311840 369.87460327]
[22.61583519 348.53060913]
[37.88684082 331.09646606]
[57.88723373 319.35531616]
[80.58374023 314.51208496]
[81.41490936 299.53512573]
[82.24608612 284.55816650]
[83.07725525 269.58120728]
[83.90842438 254.60426331]
[84.73960114 239.62730408]
[77.71942139 226.49085999]
[86.20952606 213.14062500]
[87.04069519 198.16366577]
[87.87186432 183.18670654]
[88.70304108 168.20976257]
[89.53421021 153.23280334]
[90.36538696 138.25584412]
[83.34520721 125.11940002]
[91.83531189 111.76916504]
[85.69805908 99.20629120]
[93.18773651 87.39966583]
[94.01890564 72.42270660]
[94.85008240 57.44575500]
[95.68125153 42.46880341]
[88.72052765 28.26109695]
[97.15117645 15.98211384]
[97.98235321 1.00516009]
[98.81352234 -13.97179413]
[99.64469147 -28.94874763]
[100.47586823 -43.92570114]
[101.30703735 -58.90265656]
[102.13821411 -73.87960815]
[102.96938324 -88.85656738]
[103.80055237 -103.83351898]
[104.63172913 -118.81047058]
[105.46289825 -133.78742981]
[106.29407501 -148.76437378]
[107.12524414 -163.74133301]
[107.95641327 -178.71829224]
[100.99568939 -192.92599487]
[109.42633820 -205.20497131]
[110.25751495 -220.18193054]
[111.08868408 -235.15888977]
[97.79928589 -242.58540344]
[89.08767700 -254.99487305]
[86.63791656 -269.89517212]
[90.88305664 -284.32223511]
[100.92970276 -295.42962646]
[114.74543762 -301.05020142]
[115.57660675 -316.02716064]
[116.40778351 -331.00411987]
[117.23895264 -345.98107910]
[118.07012939 -360.95800781]
[107.80921173 -372.67773438]
[108.86549377 -387.85464478]
[120.10167694 -397.56463623]
[120.93284607 -412.54159546]
[121.76401520 -427.51852417]
[108.37569427 -434.84762573]
[99.50019073 -447.26489258]
[96.89974213 -462.30484009]
[101.09066772 -476.98132324]
[111.24086761 -488.38027954]
[125.33499146 -494.23846436]
[140.57466125 -493.39270020]
[153.93402100 -486.01095581]
[162.76055908 -473.55883789]
[165.30175781 -458.50875854]
[161.05307007 -443.84890747]
[150.85806274 -432.48999023]
[136.74096680 -426.68737793]
[135.90980530 -411.71041870]
[135.07862854 -396.73345947]
[145.17137146 -385.83978271]
[144.54179382 -370.63919067]
[133.04707336 -360.12686157]
[132.21591187 -345.14990234]
[131.38473511 -330.17294312]
[130.55355835 -315.19598389]
[129.72239685 -300.21902466]
[142.83135986 -293.10421753]
[151.58724976 -280.95333862]
[154.20991516 -266.14514160]
[150.12644958 -251.60742188]
[140.09519958 -240.23811340]
[126.06563568 -234.32771301]
[125.23446655 -219.35075378]
[124.40329742 -204.37380981]
[131.42347717 -191.23735046]
[122.93337250 -177.88711548]
[122.10219574 -162.91015625]
[121.27102661 -147.93321228]
[120.43984985 -132.95625305]
[119.60868073 -117.97930145]
[118.77751160 -103.00234985]
[117.94633484 -88.02539062]
[117.11516571 -73.04843903]
[116.28398895 -58.07148361]
[115.45281982 -43.09452820]
[114.62165070 -28.11757660]
[113.79047394 -13.14062214]
[112.95930481 1.83633232]
[112.12813568 16.81328583]
[119.14830780 29.94973946]
[110.65821075 43.29997253]
[109.82703400 58.27692795]
[108.99586487 73.25388336]
[108.16468811 88.23083496]
[114.30194092 100.79370880]
[106.81226349 112.60033417]
[113.77298737 126.80804443]
[105.34233856 139.08702087]
[104.51116943 154.06398010]
[103.67999268 169.04093933]
[102.84882355 184.01788330]
[102.01764679 198.99484253]
[101.18647766 213.97178650]
[108.14720154 228.17950439]
[99.71655273 240.45848083]
[98.88538361 255.43544006]
[98.05420685 270.41238403]
[97.22303772 285.38934326]
[96.39186096 300.36630249]
[95.56069183 315.34326172]
[103.93067169 317.20938110]
[112.02121735 320.04736328]
[119.71992493 323.81738281]
[126.91989136 328.46661377]
[133.52119446 333.93014526]
[139.43225098 340.13162231]
[144.57115173 346.98455811]
[148.86672974 354.39340210]
[152.25955200 362.25494385]
[154.70280457 370.45968628]
[156.16288757 378.89340210]
[156.61982727 387.43872070]
[156.06770325 395.97677612]
[154.51455688 404.38885498]
[151.98236084 412.55801392]
[148.50669861 420.37078857]
[144.13627625 427.71865845]
[138.93220520 434.49960327]
[132.96714783 440.61953735]
[126.32437134 445.99368286]
[119.09648895 450.54754639]
[111.38423157 454.21810913]
[103.29502869 456.95468140]
] def
/pairs [
[4 19]
[5 18]
[6 17]
[7 16]
[8 15]
[9 14]
[27 146]
[28 145]
[29 144]
[30 143]
[31 142]
[32 141]
[34 139]
[35 138]
[36 137]
[37 136]
[38 135]
[39 134]
[41 132]
[43 130]
[44 129]
[45 128]
[46 127]
[48 125]
[49 124]
[50 123]
[51 122]
[52 121]
[53 120]
[54 119]
[55 118]
[56 117]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
[63 110]
[64 109]
[65 108]
[71 102]
[72 101]
[73 100]
[74 99]
[75 98]
[78 95]
[79 94]
[80 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
