%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.1
%%CreationDate: Fri Jan 15 12:00:27 2016
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UUGAUGGAAAUUUGACAAUCGUUGUUUGCGGGUGGAGCAUCAUCAAGAUUCACAUGCAAAUGCCGGCGGUGAUUCUUCCAAAGUUCUUUGGAAGUGAGAAUCUUGAUGAUGCUGCAUCGGCAAUAAACGACUAUACAACCAAGGACUUGGCAAAA\
) def
/coor [
[139.83934021 717.95532227]
[131.93603516 712.37133789]
[124.82489777 705.80529785]
[118.62712097 698.36840820]
[113.44845581 690.18676758]
[109.37734985 681.39916992]
[106.48345947 672.15472412]
[104.81647491 662.61047363]
[104.40522003 652.92840576]
[105.25720978 643.27319336]
[107.35846710 633.80895996]
[110.67378235 624.69665527]
[115.14729309 616.09136963]
[120.70341492 608.13952637]
[127.24813080 600.97662354]
[134.67059326 594.72473145]
[142.84495544 589.49053955]
[151.63258362 585.36346436]
[160.88432312 582.41406250]
[158.77677917 567.56286621]
[156.66925049 552.71160889]
[154.56170654 537.86041260]
[152.45416260 523.00921631]
[140.42958069 514.29455566]
[138.08068848 499.26336670]
[147.30293274 486.70996094]
[145.19540405 471.85876465]
[143.08786011 457.00756836]
[140.98033142 442.15634155]
[131.53155518 430.64245605]
[137.25315857 415.89205933]
[135.14561462 401.04086304]
[133.03808594 386.18963623]
[130.93054199 371.33843994]
[121.48178101 359.82452393]
[127.20336914 345.07412720]
[125.09583282 330.22293091]
[122.98829651 315.37173462]
[120.88076019 300.52053833]
[118.77322388 285.66931152]
[116.66568756 270.81811523]
[114.55815125 255.96690369]
[112.45061493 241.11570740]
[110.34307098 226.26449585]
[108.23553467 211.41329956]
[106.12799835 196.56208801]
[104.02046204 181.71089172]
[101.91292572 166.85968018]
[99.80538940 152.00846863]
[97.69785309 137.15727234]
[95.59031677 122.30606842]
[73.31005859 112.78254700]
[67.70982361 83.09375763]
[58.69868851 71.10211945]
[49.68755722 59.11047745]
[40.55613327 47.21017838]
[31.30535126 35.40242386]
[15.80393410 36.09933853]
[2.87196493 27.52356911]
[-2.51795030 12.97267914]
[1.70672083 -1.95822144]
[13.92150593 -11.52789497]
[29.42957115 -12.05660629]
[42.26774979 -3.34105587]
[47.49949646 11.26744938]
[43.11310196 26.15164185]
[52.36388779 37.95939255]
[59.00275803 41.30439377]
[61.67919922 50.09934235]
[70.69033051 62.09098434]
[79.70146179 74.08262634]
[87.06462860 72.65650177]
[91.95764160 58.47699356]
[101.79095459 69.80425262]
[109.15411377 68.37812805]
[113.03639984 53.88923645]
[116.91868591 39.40035248]
[120.80097198 24.91146278]
[124.68325806 10.42257595]
[128.56555176 -4.06631136]
[132.44783020 -18.55519867]
[136.33012390 -33.04408646]
[131.56536865 -48.73577881]
[142.96841431 -60.52147675]
[158.80877686 -56.27706528]
[162.79124451 -40.36883163]
[150.81900024 -29.16180038]
[146.93672180 -14.67291260]
[143.05442810 -0.18402560]
[139.17214966 14.30486202]
[135.28985596 28.79374886]
[131.40757751 43.28263474]
[127.52529144 57.77152252]
[123.64300537 72.26041412]
[130.72238159 87.89633942]
[129.39970398 103.37700653]
[121.53559113 114.86088562]
[110.44152069 120.19853210]
[112.54905701 135.04972839]
[114.65659332 149.90093994]
[116.76412964 164.75213623]
[118.87166595 179.60334778]
[120.97920227 194.45455933]
[123.08673859 209.30575562]
[125.19428253 224.15696716]
[127.30181885 239.00816345]
[129.40934753 253.85937500]
[131.51689148 268.71057129]
[133.62442017 283.56179810]
[135.73196411 298.41299438]
[137.83950806 313.26419067]
[139.94703674 328.11538696]
[142.05458069 342.96661377]
[151.65408325 355.54278564]
[145.78175354 369.23089600]
[147.88928223 384.08212280]
[149.99682617 398.93331909]
[152.10435486 413.78451538]
[161.70387268 426.36068726]
[155.83152771 440.04882812]
[157.93907166 454.90002441]
[160.04660034 469.75122070]
[162.15414429 484.60244751]
[174.50485229 494.09442139]
[176.43063354 509.18566895]
[167.30537415 520.90167236]
[169.41291809 535.75286865]
[171.52044678 550.60412598]
[173.62799072 565.45532227]
[175.73551941 580.30651855]
[197.19096375 582.61560059]
[217.07232666 590.97467041]
[233.71292114 604.67529297]
[245.71990967 622.56170654]
[252.09089661 643.12805176]
[252.29760742 664.64550781]
[246.32965088 685.30706787]
[234.69487000 703.37982178]
[218.37609863 717.35003662]
[225.07806396 730.76959229]
[231.78004456 744.18908691]
[238.48202515 757.60864258]
[252.45401001 766.19439697]
[251.73406982 782.57775879]
[237.06282043 789.90484619]
[223.53279114 780.63824463]
[225.06250000 764.31060791]
[218.36053467 750.89105225]
[211.65855408 737.47155762]
[204.95657349 724.05206299]
[195.71975708 726.89056396]
[186.19023132 728.50360107]
[176.52986145 728.86334229]
[166.90281677 727.96301270]
[157.47279358 725.81750488]
] def
/pairs [
[19 130]
[20 129]
[21 128]
[22 127]
[23 126]
[26 123]
[27 122]
[28 121]
[29 120]
[31 118]
[32 117]
[33 116]
[34 115]
[36 113]
[37 112]
[38 111]
[39 110]
[40 109]
[41 108]
[42 107]
[43 106]
[44 105]
[45 104]
[46 103]
[47 102]
[48 101]
[49 100]
[50 99]
[51 98]
[53 71]
[54 70]
[55 69]
[56 67]
[57 66]
[75 94]
[76 93]
[77 92]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
[139 150]
[140 149]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
