%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.1
%%CreationDate: Fri Jan 15 12:00:27 2016
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GAAGAUUGUUAAACAAAACGGAAGACCAGUCUCCGGAGCCACGGUCGUUGUUUGCUGCUGUGGCAUCAUCAAGAUUCACAUCGCCAGAUGGACGGUGGUGAUUCACCCUCCCCAAAGUUCUCUAUGAAAAUGAGAAUCUUGAUGAUGCUGCAUCGGAAAUCAACGGCUAUUCUUUCCCUCUCUCCUAUAUAUGUUUAAUAUUCA\
) def
/coor [
[71.01933289 926.34222412]
[56.81852341 918.87786865]
[53.94195938 903.09484863]
[64.59629822 891.10046387]
[65.05596924 876.10748291]
[57.71232986 863.14910889]
[65.86890411 849.59252930]
[66.32857513 834.59954834]
[66.78824615 819.60662842]
[67.24792480 804.61364746]
[67.70759583 789.62072754]
[68.16726685 774.62774658]
[68.62694550 759.63476562]
[69.08661652 744.64184570]
[69.54628754 729.64886475]
[62.72621918 726.52850342]
[50.50170517 735.22113037]
[49.08608627 720.28778076]
[42.26601791 717.16741943]
[31.22196770 727.31774902]
[20.17791748 737.46807861]
[9.13386917 747.61840820]
[4.93041039 755.73364258]
[-2.15806460 757.83801270]
[-13.35636330 767.81793213]
[-17.98703957 783.54968262]
[-33.98794174 787.14178467]
[-44.89871597 774.89892578]
[-39.49529266 759.41558838]
[-23.33624840 756.61962891]
[-12.13794994 746.63970947]
[-1.01644993 736.57434082]
[10.02759933 726.42401123]
[21.07164764 716.27368164]
[32.11569595 706.12335205]
[38.66830063 692.63031006]
[39.81653595 677.67431641]
[40.96477509 662.71832275]
[30.03549194 655.04608154]
[24.27933693 642.87719727]
[25.29705620 629.34552002]
[32.92940903 617.99481201]
[45.27092361 611.85052490]
[46.64822006 596.91387939]
[48.02551270 581.97723389]
[49.40280533 567.04058838]
[50.78009796 552.10400391]
[52.15739059 537.16735840]
[53.53468323 522.23071289]
[54.91197586 507.29406738]
[42.67237854 498.80538940]
[36.28258133 485.23974609]
[37.54924393 470.19775391]
[46.23197937 457.72750854]
[60.08110428 451.23529053]
[61.45840073 436.29864502]
[62.83569336 421.36203003]
[56.29969025 407.97808838]
[65.27143097 394.94662476]
[66.64871979 380.01000977]
[68.02601624 365.07336426]
[69.40331268 350.13671875]
[70.78060150 335.20010376]
[72.15789795 320.26345825]
[73.53518677 305.32681274]
[74.91248322 290.39019775]
[76.28977203 275.45355225]
[77.66706848 260.51690674]
[79.04436493 245.58029175]
[80.42165375 230.64364624]
[81.79895020 215.70701599]
[83.17623901 200.77038574]
[84.55353546 185.83374023]
[85.93082428 170.89710999]
[87.30812073 155.96047974]
[88.68540955 141.02383423]
[90.06270599 126.08720398]
[62.58073425 110.92507172]
[59.81864166 70.16405487]
[51.95667648 57.38949203]
[44.09471512 44.61492538]
[36.23274994 31.84036064]
[21.55651855 24.52323914]
[20.82542610 8.14039612]
[34.79155731 -0.45490459]
[49.08775711 7.57944584]
[49.00731659 23.97839546]
[56.86928177 36.75296021]
[64.73124695 49.52752686]
[72.59320831 62.30209351]
[86.89415741 57.77628326]
[85.97524261 42.80445480]
[77.40705872 29.50419807]
[84.35014343 16.32683754]
[83.43122864 1.35501003]
[82.51231384 -13.61681652]
[81.59339905 -28.58864403]
[80.67448425 -43.56047058]
[71.17406464 -56.92737579]
[78.24503326 -71.72377777]
[94.61338043 -72.72840118]
[103.44075012 -58.90778351]
[95.64630890 -44.47938538]
[96.56522369 -29.50755882]
[97.48413849 -14.53573132]
[98.40305328 0.43609521]
[99.32196808 15.40792179]
[107.82442474 27.63729477]
[100.94706726 41.88554001]
[101.86598206 56.85736847]
[109.06657410 58.95531845]
[113.26248169 44.55412674]
[112.80299377 29.56116486]
[126.92021942 24.49126434]
[136.10429382 36.35097504]
[127.66367340 48.75002670]
[123.46777344 63.15122223]
[130.66836548 65.24917603]
[139.48515320 53.11391830]
[148.30192566 40.97866440]
[147.22250366 24.97196579]
[159.16078186 14.25481701]
[174.95872498 17.04850006]
[182.49749756 31.20993805]
[175.99401855 45.87568665]
[160.43717957 49.79544449]
[151.62040710 61.93069839]
[142.80361938 74.06595612]
[145.21937561 89.78564453]
[142.45510864 104.27785492]
[135.54571533 116.00189209]
[125.92951965 123.94268036]
[115.22502136 127.69539642]
[104.99934387 127.46450043]
[103.62204742 142.40113831]
[102.24475861 157.33776855]
[100.86746216 172.27439880]
[99.49016571 187.21104431]
[98.11287689 202.14767456]
[96.73558044 217.08430481]
[95.35829163 232.02093506]
[93.98099518 246.95758057]
[92.60370636 261.89422607]
[91.22640991 276.83084106]
[89.84911346 291.76748657]
[88.47182465 306.70413208]
[87.09452820 321.64074707]
[85.71723938 336.57739258]
[84.33994293 351.51400757]
[82.96265411 366.45065308]
[81.58535767 381.38729858]
[80.20806122 396.32391357]
[86.64555359 410.77624512]
[77.77232361 422.73931885]
[76.39503479 437.67593384]
[75.01773834 452.61257935]
[87.44615936 461.52783203]
[93.70214081 475.37554932]
[92.19681549 490.39556885]
[83.43409729 502.56399536]
[69.84860992 508.67138672]
[68.47132111 523.60803223]
[67.09402466 538.54461670]
[65.71673584 553.48126221]
[64.33943939 568.41790771]
[62.96214676 583.35455322]
[61.58485413 598.29119873]
[60.20756149 613.22784424]
[73.07041168 624.20806885]
[76.81846619 640.52917480]
[70.16808319 655.71673584]
[55.92076492 663.86657715]
[54.77252579 678.82257080]
[53.62428665 693.77850342]
[61.80224228 681.20391846]
[68.45191193 667.75842285]
[78.76302338 656.86431885]
[91.82289124 649.48596191]
[106.47550964 646.27648926]
[121.42388153 647.51989746]
[135.34484863 653.10620117]
[147.00617981 662.54089355]
[155.37567139 674.98883057]
[159.71247864 689.34820557]
[159.63273621 704.34802246]
[155.14350891 718.66052246]
[146.64213562 731.01873779]
[134.88116455 740.32891846]
[120.90158844 745.76690674]
[105.94083405 746.85131836]
[91.32384491 743.48651123]
[84.53924561 730.10858154]
[84.07956696 745.10150146]
[83.61989594 760.09448242]
[83.16022491 775.08740234]
[82.70055389 790.08038330]
[82.24087524 805.07330322]
[81.78120422 820.06628418]
[81.32153320 835.05926514]
[80.86185455 850.05218506]
[88.17262268 864.08300781]
[80.04892731 876.56719971]
[79.58925629 891.56011963]
[89.48879242 904.18469238]
] def
/pairs [
[4 203]
[5 202]
[7 200]
[8 199]
[9 198]
[10 197]
[11 196]
[12 195]
[13 194]
[14 193]
[15 192]
[19 35]
[20 34]
[21 33]
[22 32]
[24 31]
[25 30]
[36 174]
[37 173]
[38 172]
[43 168]
[44 167]
[45 166]
[46 165]
[47 164]
[48 163]
[49 162]
[50 161]
[55 156]
[56 155]
[57 154]
[59 152]
[60 151]
[61 150]
[62 149]
[63 148]
[64 147]
[65 146]
[66 145]
[67 144]
[68 143]
[69 142]
[70 141]
[71 140]
[72 139]
[73 138]
[74 137]
[75 136]
[76 135]
[77 134]
[79 90]
[80 89]
[81 88]
[82 87]
[91 110]
[92 109]
[94 107]
[95 106]
[96 105]
[97 104]
[98 103]
[118 128]
[119 127]
[120 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
