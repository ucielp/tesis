%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.1
%%CreationDate: Fri Jan 15 12:00:27 2016
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GAAGAUGGAAGACUAAUUUCCGGAGCCACGGUCGCUGUUUGCUGCUGUGGCAUCAUCAAGAUUCACAUCUGUUGAUGGACGGUGGUGAUUCGCUCUCCCCAAAGUUCUCUAUGAAAAUGAGAAUCUUGAUGAUGCUGCAUCGGCAAUCAACGGCUAUUCUUUUUCUCUCCCUCUCUAUAUAGAUUCUUUGGA\
) def
/coor [
[112.99533081 293.38006592]
[123.44707489 282.48678589]
[136.45079041 274.81826782]
[132.58816528 260.32412720]
[128.72554016 245.83000183]
[117.97178650 235.52436829]
[121.89449310 220.19715881]
[118.03186798 205.70301819]
[114.16923523 191.20887756]
[110.18877411 176.74665833]
[106.09073639 162.31730652]
[101.99269867 147.88796997]
[94.77802277 145.83894348]
[91.45658875 160.46659851]
[91.32254028 175.46598816]
[77.16204834 180.41375732]
[67.71583557 168.76176453]
[75.48573303 155.93075562]
[80.34867859 141.74090576]
[73.13400269 139.69189453]
[62.06339264 149.81323242]
[50.99278641 159.93458557]
[50.53603363 175.73226929]
[38.98522949 186.51904297]
[23.19325256 185.89529419]
[12.52920818 174.23107910]
[13.31988239 158.44657898]
[25.09618378 147.90646362]
[40.87144089 148.86396790]
[51.94204712 138.74263000]
[63.01265717 128.62127686]
[56.27749634 100.41304779]
[67.36206055 75.71614075]
[89.52632141 63.84919357]
[88.30683899 48.89884949]
[87.08736420 33.94850159]
[85.86788177 18.99815369]
[84.64840698 4.04780769]
[83.42892456 -10.90253925]
[81.84481049 -25.81865692]
[79.89700317 -40.69165421]
[77.94920349 -55.56465149]
[76.00139618 -70.43765259]
[74.05358887 -85.31064606]
[64.58979797 -97.98925781]
[70.60890198 -111.61348724]
[68.66109467 -126.48648834]
[66.71328735 -141.35948181]
[64.76548004 -156.23248291]
[62.81767654 -171.10548401]
[60.86987305 -185.97846985]
[58.92206573 -200.85147095]
[56.97425842 -215.72447205]
[55.02645493 -230.59747314]
[53.07864761 -245.47045898]
[51.13084030 -260.34347534]
[49.18303680 -275.21646118]
[47.23522949 -290.08944702]
[45.28742218 -304.96246338]
[43.33961868 -319.83544922]
[41.39181137 -334.70843506]
[39.44400787 -349.58145142]
[37.49620056 -364.45443726]
[35.54839325 -379.32745361]
[26.08460045 -392.00604248]
[32.10370636 -405.63027954]
[30.15590096 -420.50326538]
[28.20809555 -435.37628174]
[15.23227882 -450.79028320]
[23.37481880 -468.31872559]
[20.94393539 -483.12045288]
[18.51305008 -497.92218018]
[8.64158821 -510.28601074]
[14.21404171 -524.09893799]
[11.78315735 -538.90063477]
[7.29816198 -546.87603760]
[9.43521500 -553.96295166]
[7.24557924 -568.80224609]
[5.05594444 -583.64154053]
[2.86630917 -598.48089600]
[-9.53670883 -607.90441895]
[-11.54591846 -622.98480225]
[-2.48558807 -634.75109863]
[-4.67522335 -649.59045410]
[-6.86485815 -664.42974854]
[-16.53376770 -676.95263672]
[-10.73721981 -690.67303467]
[-12.92685509 -705.51239014]
[-26.33884811 -713.55303955]
[-31.39569283 -728.35040283]
[-25.70970154 -742.91760254]
[-11.96562672 -750.37646484]
[3.34700036 -747.20513916]
[12.99802589 -734.90100098]
[12.43053055 -719.27368164]
[1.91246772 -707.70196533]
[4.10210276 -692.86267090]
[13.61439419 -681.40118408]
[7.97446442 -666.61938477]
[10.16409969 -651.78009033]
[12.35373497 -636.94073486]
[24.42632675 -628.29272461]
[26.85831833 -613.27471924]
[17.70563126 -600.67053223]
[19.89526749 -585.83117676]
[22.08490181 -570.99188232]
[24.27453804 -556.15258789]
[26.58487320 -541.33154297]
[29.01575661 -526.52984619]
[38.71334839 -515.22467041]
[33.31476593 -500.35305786]
[35.74565125 -485.55133057]
[38.17653656 -470.74963379]
[46.99437714 -465.54983521]
[51.58348083 -456.15411377]
[50.20715332 -445.56689453]
[43.08109283 -437.32409668]
[45.02890015 -422.45108032]
[46.97670364 -407.57809448]
[56.30117798 -395.96328735]
[50.42139053 -381.27523804]
[52.36919785 -366.40225220]
[54.31700516 -351.52926636]
[56.26480865 -336.65625000]
[58.21261597 -321.78326416]
[60.16041946 -306.91024780]
[62.10822678 -292.03726196]
[64.05603027 -277.16427612]
[66.00383759 -262.29125977]
[67.95164490 -247.41827393]
[69.89945221 -232.54527283]
[71.84725952 -217.67227173]
[73.79505920 -202.79927063]
[75.74286652 -187.92628479]
[77.69067383 -173.05328369]
[79.63848114 -158.18028259]
[81.58628845 -143.30728149]
[83.53409576 -128.43429565]
[85.48189545 -113.56129456]
[94.80637360 -101.94649506]
[88.92658234 -87.25845337]
[90.87438965 -72.38545227]
[92.82219696 -57.51245880]
[94.77000427 -42.63946152]
[96.71781158 -27.76646423]
[99.29068756 -25.33465576]
[100.80617523 -21.52973366]
[100.62903595 -16.86572075]
[98.37927246 -12.12201786]
[99.59875488 2.82832861]
[100.81822968 17.77867508]
[102.03771210 32.72902298]
[103.25718689 47.67937088]
[104.47666931 62.62971497]
[114.49879456 64.27987671]
[123.94372559 68.63009644]
[132.08203125 75.48441315]
[138.24949646 84.44969177]
[141.90031433 94.95697021]
[142.65342712 106.29715729]
[140.32804871 117.66872406]
[134.96553040 128.23440552]
[126.83498383 137.18273926]
[116.42205048 143.78993225]
[120.52008057 158.21926880]
[124.61811829 172.64862061]
[129.98080444 180.06234741]
[128.66337585 187.34625244]
[132.52600098 201.84039307]
[136.38864136 216.33453369]
[147.41867065 227.67689514]
[143.21968079 241.96737671]
[147.08230591 256.46151733]
[150.94493103 270.95565796]
[166.04029846 271.13586426]
[180.52694702 275.38317871]
[193.32986450 283.38238525]
[203.49900818 294.53997803]
[210.27973938 308.02789307]
[213.16888428 322.84530640]
[211.95205688 337.89260864]
[206.71955872 352.05325317]
[197.85966492 364.27639771]
[186.02984619 373.65496826]
[172.10795593 379.49307251]
[157.12707520 381.35745239]
[142.19889832 379.10974121]
[128.43118286 372.91677856]
[116.84561157 363.23809814]
[108.30187988 350.79193115]
[103.43400574 336.50183105]
[102.60321808 321.42828369]
] def
/pairs [
[3 174]
[4 173]
[5 172]
[7 170]
[8 169]
[9 168]
[10 166]
[11 165]
[12 164]
[20 31]
[21 30]
[22 29]
[34 154]
[35 153]
[36 152]
[37 151]
[38 150]
[39 149]
[40 145]
[41 144]
[42 143]
[43 142]
[44 141]
[46 139]
[47 138]
[48 137]
[49 136]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[60 125]
[61 124]
[62 123]
[63 122]
[64 121]
[66 119]
[67 118]
[68 117]
[70 113]
[71 112]
[72 111]
[74 109]
[75 108]
[77 107]
[78 106]
[79 105]
[80 104]
[83 101]
[84 100]
[85 99]
[87 97]
[88 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
